-- 1. List the number of films per category.
SELECT category.name AS category, count(*) AS total 
FROM film_category JOIN category using (category_id) 
GROUP BY category_id;
-- 2. Retrieve the store ID, city, and country for each store.
SELECT store_id, city, country
FROM store 
JOIN address USING(address_id)
JOIN city USING(city_id)
JOIN country USING(country_id);
-- 3.  Calculate the total revenue generated by each store in dollars.
SELECT store_id, sum(amount) AS 'total_revenue' FROM payment
JOIN staff USING(staff_id) 
GROUP BY staff_id;
-- 4.  Determine the average running time of films for each category.
SELECT name AS category, AVG(length) AS total_running_time
FROM film
JOIN film_category USING(film_id)
JOIN category USING(category_id)
GROUP BY category_id;
-- 5.  Identify the film categories with the longest average running time.
SELECT name AS category, AVG(length) AS total_running_time
FROM film
JOIN film_category USING(film_id)
JOIN category USING(category_id)
GROUP BY category_id
ORDER BY total_running_time DESC
LIMIT 1;
-- 6.  Display the top 10 most frequently rented movies in descending order.
SELECT title,count(*) as number_renting
FROM rental
JOIN inventory USING(inventory_id)
JOIN film USING(film_id)
GROUP BY film_id
ORDER BY number_renting DESC
LIMIT 10;
-- 7. Determine if "Academy Dinosaur" can be rented from Store 1.
SELECT 
    CASE 
        WHEN COUNT(i.inventory_id) > COUNT(r.rental_id) THEN 'Available'
        ELSE 'Not available'
    END AS availability
FROM inventory i
JOIN film f USING(film_id)
LEFT JOIN rental r ON i.inventory_id = r.inventory_id AND r.return_date IS NULL
WHERE f.title = 'Academy Dinosaur' AND i.store_id = 1;
-- 8. Provide a list of all distinct film titles, along with their availability status in the inventory. Include a column indicating whether each title is 'Available' or 'NOT available.' Note that there are 42 titles that are not in the inventory, and this information can be obtained using a `CASE` statement combined with `IFNULL`."
SELECT 
    f.title,
    CASE 
        WHEN IFNULL(COUNT(i.inventory_id), 0) > 0 THEN 'Available'
        ELSE 'NOT available'
    END AS availability
FROM film f
LEFT JOIN inventory i ON f.film_id = i.film_id
GROUP BY f.film_id, f.title
ORDER BY f.title;